name: Terraform Destroy

on:
  workflow_dispatch: # Permite iniciar el flujo manualmente desde la interfaz de GitHub Actions

jobs:
  terraform_destroy:
    name: "Terraform Destroy - Grupo 13" # Nombre del trabajo que aparece en la interfaz de GitHub Actions
    runs-on: ubuntu-latest # Define el sistema operativo en el que se ejecutar치 el trabajo
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2 # Accion de GitHub para clonar el repositorio en el entorno virtual

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1 # Utiliza la acci칩n oficial de HashiCorp para instalar Terraform en el entorno de ejecuci칩n.

      - name: Terraform Init
        id: init
        run: terraform init # Ejecuta el comando `terraform init`, que inicializa el backend y descarga los proveedores necesarios.
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve # Ejecuta el comando `terraform destroy` con el flag `-auto-approve`, lo que elimina los recursos sin solicitar confirmaci칩n manual.
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
